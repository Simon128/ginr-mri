data:
  name: brats
  data_prep:
    use_lgg: true
    use_hgg: true
    use_data: ["T1"]
    data_prep_option: "STACK"
    input_data: ["T1"]
    output_data: ["T1"]
  source_transforms:
    - name: centercrop3d
      args:
        size: [160, 192, 128]
  target_transforms:
    - name: centercrop3d
      args:
        size: [160, 192, 128]
model:
  name: "base"
  backbone: "nvidia2018"
  latent_transform:
    name: convolutional
    levels:
      - n_layer: 2
        strides: [2, 1]
        padding: [1, "same"]
        channels: [128, 256]
        kernel_size: [3, 1]
        backbone_idx: 3
        input_channels: 128
        batch_norm: true
      - n_layer: 1
        strides: [1]
        padding: ["same"]
        channels: [256]
        kernel_size: [1]
        backbone_idx: 4
        input_channels: 256
        batch_norm: true
  inr:
    name: weight_modulated_inr
    n_layer: 5
    hidden_dim: [256, 256, 256, 256] # needs to coincide with backbone embedding channels
    use_bias: true
    input_dim: 3
    output_dim: 1
    ff_sigma: 120
    ff_dim: 120
    normalize_weights: True
    modulated_layers: [1, 2]
    backbone_spatial_feature_dimensions: [7680, 7680]
    modulated_layers_to_backbone_features_map:
      1: 0
      2: 1
  coord_sampler:
    coord_range: [-1.0, 1.0]
  subsampler:
    type: random
    ratio: 0.1
optimizer:
  type: adam
  init_lr: 0.0001
  weight_decay: 0.0
  betas: [0.9, 0.999] #[0.9, 0.95]
  max_gn: null
hooks:
  - hook: tensorboard
    priority: 100
    cfg:
      directory: /home/simon/tum/mri-runs/debug
      batch_log_freq: 10
  - hook: lr_scheduler
    priority: 100
    cfg:
      scheduler_name: StepLR
      step_size: 1000
engine:
  epochs: 10000
  batch_size: 2
  amp: false
  validation_frequency: 1.0
